---
title: "abtest"
format: html
editor: visual
---

# A/B Testing

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

### ***Import Necessary Libraries***

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
suppressPackageStartupMessages({
    library(readr)
    library(ggplot2)
    library(tidyverse)
    library(cowplot)
    library(ggrepel)
    library(Hmisc)
    library(GGally)
    library(pheatmap)
})
theme_set(theme_cowplot())
options(repr.plot.width=9,repr.plot.height=7)
```

### *Exploratory Data Analysis*

```{r}

df = read_csv("/home/miki/Desktop/Miki/R/all-statistical-analysis/t-test/Placement_Data_Full_Class.csv")
 
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
str(df)
```

```{r}
#print(df[duplicated(df),])
df <- df[!duplicated(df, fromLast = T), ]
```

```{r}
head(df)
```

```{r}
which(is.na(df))
```

```{r}
summary(df)
```

```{r}
placementnum <- select(df, ends_with("_p"), salary) 
placementcat <- select(df, -(ends_with("_p")), -salary)
placedset <- filter(df, status == "Placed")
#placedset <- na.omit(placementds) # alternative
notplacedset <- subset(df, status == "Not Placed")
```

```{r}
ggplot(df) + geom_density(aes(degree_p)) # density plot
```

```{r}
ggplot(df) + geom_histogram(aes(degree_p), bins = 10) 

```

```{r}
qqbase <- ggplot(df, aes(sample=degree_p))
qqbase + geom_qq()
```

```{r}
qqbase + geom_qq() + geom_qq_line() # qq plot
```

```{r}
qqbase + stat_qq() + stat_qq_line() # alternative
```

```{r}
qqbase1 <- ggplot(df, aes(sample=degree_p, color = status))
qqbase1 + geom_qq() + geom_qq_line()
```

```{r}
# Shapiro-Wilk's test to test normality
shapiro.test(df$degree_p) 
# Note: p>= 0.05 which is our choosen alpha, we can assume normality
```

```{r}
ggplot(placementnum, aes(degree_p, mba_p)) + geom_point() + geom_smooth()
```

```{r}
cor(placementnum$degree_p, placementnum$mba_p)
```

```{r}
# Pearson correlation test
cor.test(placementnum$degree_p, placementnum$mba_p)
# Note: p < 0.05, we can conclude the variables are significantly correlated
```

```{r}
# Correlation test between multiple variables
round(cor(placementnum, use = "pairwise.complete.obs"), 2)
```

```{r}
GGally::ggpairs(placementnum)
```

```{r}
rcorr(as.matrix(placementnum))
```

```{r}
set.seed(25)
mysample <-  sample_n(df, size = 100)
summary(mysample$degree_p)

# We want to prove that the average degree_p differs from 60% (two-tailed test)
#H0=60
t.test(mysample$degree_p, mu = 60, alternative = "two.sided") # default is two sided
# Note: p < 0.05,  We can conclude that the mean degree_p is significantly different from 60%
```

```{r}
# We want to prove that the average degree_p is less than 66% (one-tailed test)
# H0 >=66
t.test(mysample$degree_p, mu = 66, alternative = "less")
```

```{r}
# Two-sample t-test
# create two samples based on gender
set.seed(25)
malesample <- df %>% filter(gender == "M") %>% sample_n(size = 50)
femalesample <- df %>% filter(gender == "F") %>% sample_n(size = 50)

# Is there any significant difference between male and female percentage?
t.test(malesample$degree_p, femalesample$degree_p, var.equal = T)
# Note: p < 0.05,  We can conclude that the mean degree_p is significantly different  between the two groups
```

```{r}
# We want to prove that the average percentage of male is less than that of female
#H0: mm â‰¥ mf 
t.test(malesample$degree_p, femalesample$degree_p, var.equal = T, alternative = "less")
```

```{r}
# Welch t-statistic (unequal varaince)
t.test(degree_p~gender, data = mysample, var.equal = F)
```

```{r}
# one-way ANOVa
levels(df$degree_t)
# compute the summary statistics for understanding
df %>% group_by(degree_t) %>% summarise(count = n(), 
                                                 mean(mba_p), sd(mba_p))
# visualise for a better understanding
ggplot(df, aes(y=mba_p)) +geom_boxplot(aes(fill = degree_t))
```

```{r}
# we want to check whether type of degree had any siginifcant impact on the average MBA %
myaov1 <-  aov(mba_p ~ degree_t, data = df)
summary.aov(myaov1)
# Note: p >= 0.05,  We can conclude that the mean MBA % under different degree type are same
```

```{r}
# Diagnostic Checking
plot(myaov1, 1)
bartlett.test(mba_p ~ degree_t, data = df)
# Null hypothesis is there is homogenity of variances across groups
```

```{r}
plot(myaov1, 2)
myaov1residuals <- residuals(myaov1)
shapiro.test(myaov1residuals)
# Note: normality assumption is violated
```

```{r}
# chi-square goodness of fit test
deg_count <-  table(placementcat$degree_t)
deg_count
```

```{r}
chi_degree <- chisq.test(deg_count, p = c(0.6, 0.05, 0.35))
chi_degree
# Note: p >= 0.05,  We retain the null
```

```{r}
chi_degree$expected #(should be greater than 5)
```

```{r}

```
