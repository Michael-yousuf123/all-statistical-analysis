---
title: "PCA"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
suppressPackageStartupMessages({
    library(readr)
    library(ggplot2)
    library(tidyverse)
    library(cowplot)
    library(ggrepel)
    library(pheatmap)
})
theme_set(theme_cowplot())
options(repr.plot.width=9,repr.plot.height=7)
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
df <- read.csv('darlingtonia_californica.csv')
```

```{r}
head(df)
```

```{r}
df.pca <- df %>%
select(-c(site, plant))
```

```{r}
df.pca
```

### Checking the Assumption of PCA

##### ðŸ‡ºðŸ‡² Data should be Numeric and Continuous

```{r}
str(df.pca)
```

##### ðŸ‡ºðŸ‡² Variables should be Linearly Related

```{r}
data_long <- pivot_longer(data, cols = c(insert columns you want),
                            names_to = 'key')
```

```{r}

The 
The 
The data should be approximately normally distributed
The 
```

```{r}
plot <- df %>% 
  gather(variable, value, -site) %>% 
  ggplot(aes(sample = value, color = variable)) +
  geom_abline() +
  stat_qq() 

# All in one
plot
```

#####  ðŸ‡ºðŸ‡² Variables should be on a similar scale

```{r}
scaled.df <- scale(df.pca)
```

```{r}
S <- cov(scaled.df)
```

```{r}
S
```

```{r}
library(corrplot)
corrplot(S, method="circle")
```

```{r}

```
